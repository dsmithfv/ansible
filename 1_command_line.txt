# Run a command
ansible multi -b -m shell -a "tail /var/log/messages |grep ansible-command | wc -l"

# Get information on a file
ansible multi -m stat -a "path=/etc/environment"

# Copy a file to the server
ansible multi -m copy -a "src=/etc/hosts dest=/tmp/hosts"

# Retrieve a file from the server
ansible multi -b -m fetch -a "src=/etc/hosts dest=/tmp"

# Create a file or directory
ansible multi -m file -a "dest=/tmp/test mode=644 state=directory"
ansible multi -m file -a "src=/src/symlink dest=/dest/symlink owner=root group=root state=link"

# Deploy a specific version from git.
ansible app -b -m git -a "repo=git://example.com/path/to/repo.git dest=/opt/myapp update=yes version=1.2.4"

# Installing MariaDB and Django and app server tools
ansible multi -a "hostname"
ansible multi -b -m yum -a "name=ntp state=present"
ansible multi -b -m service -a "name=ntpd state=started enabled=yes"
ansible multi -b -a "service ntpd stop"
ansible multi -b -a "ntpdate -q 0.rhel.pool.ntp.org"
ansible multi -b -a "service ntpd start"
ansible app -b -m yum -a "name=MySQL-python state=present"
ansible app -b -m yum -a "name=python-setuptools state=present"
ansible app -b -m yum -a "name=epel-release state=present"
ansible app -b -m yum -a "name=python2-pip state=present"
ansible app -b -m pip -a "name=django==1.8.6 state=present"
ansible db -b -m yum -a "name=mariadb-server state=present"
ansible db -b -m service -a "name=mariadb state=started enabled=yes"
ansible db -b -a "iptables -F"
ansible db -b -a "iptables -A INPUT -s 192.168.60.0/24 -p tcp -m tcp --dport 3306 -j ACCEPT"
ansible db -b -m yum -a "name=MySQL-python state=present"
ansible db -b -m mysql_user -a "name=django host=% password=12345 priv=*.*:ALL state=present"
